quark QBox(Unsigned bits)
{
  EventWindow ew;

  // Note that EventWindow.Symmetry is Unsigned(3) but since we're
  // only using the first four values, an Unsigned(2) is both more
  // robust (can't mutate into higher symmetries) and saves a bit.
  typedef Unsigned(2) Sym; 
  Sym m_sym;

  Void nextSym() {
    if (m_sym == m_sym.maxof) m_sym = m_sym.minof;
    else ++m_sym;
  }

  Void prevSym() {
    if (m_sym == m_sym.minof) m_sym = m_sym.maxof;
    else --m_sym;
  }

  QLine(bits) m_line;
  Bool update() {
    EventWindow.Symmetry old;
    old = ew.changeSymmetry(m_sym);

    if (m_line.update())
      return true;

    Bool mod = false;

    if (m_line.isMax() && ew[4] is Empty) {
      Atom a = self;
      m_line.m_position = m_line.m_position.minof;
      nextSym();
      ew[4] = self;
      self = a;
      mod = true;
    }

    if (m_line.isMin() && ew[3] is Empty) {
      Atom a = self;
      m_line.m_position = m_line.m_position.maxof;
      prevSym();
      ew[3] = self;
      self = a;
      mod = true;
    }
    if (mod) return mod;

    Wall w;
    if (ew[3] is Empty) { ew[3] = w; mod = true; }
    if (ew[2] is Empty) { ew[2] = w; mod = true; }

    // Miter the outside corners
    if (ew[5] is Empty) { ew[5] = w; mod = true; }
    if (ew[7] is Empty) { ew[7] = w; mod = true; }

    // Double walls outside
    if (ew[10] is Empty) { ew[10] = w; mod = true; }

    ew.changeSymmetry(old);

    return mod;

  }
}
