/**                                      -*- mode:C++ -*- */

/***********************         DO NOT EDIT        ******************************
*
* System.h - Quark header for ULAM
*
**********************************************************************************
* This code is generated by the ULAM programming language compilation system.
*
* The ULAM programming language compilation system is free software:
* you can redistribute it and/or modify it under the terms of the GNU
* General Public License as published by the Free Software
* Foundation, either version 3 of the License, or (at your option)
* any later version.
*
* The ULAM programming language compilation system is distributed in
* the hope that it will be useful, but WITHOUT ANY WARRANTY; without
* even the implied warranty of MERCHANTABILITY or FITNESS FOR A
* PARTICULAR PURPOSE.  See the GNU General Public License for more
* details.
*
* You should have received a copy of the GNU General Public License
* along with the ULAM programming language compilation system
* software.  If not, see <http://www.gnu.org/licenses/>.
*
* @license GPL-3.0+ <http://spdx.org/licenses/GPL-3.0+>
*/

#ifndef UQ_10106SYSTEM_H
#define UQ_10106SYSTEM_H

#include "UlamDefs.h"

#include "Uq_10106System_Types.h"


namespace MFM{

  template <class CC, u32 POS>
  struct Uq_10106System
  {

    // Extract short names for parameter types
    typedef typename CC::ATOM_TYPE T;
    typedef typename CC::PARAM_CONFIG P;

    enum { BPA = P::BITS_PER_ATOM };
    typedef BitVector<BPA> BV;

    enum { 
      QUARK_SIZE = 0 /* Requiring quarks to advertise their size in a std way.) */
    };

    typedef AtomicParameterType <CC, VD::BITS, QUARK_SIZE, POS> Up_Us; //entire quark


    //! System.ulam:6: Void print(Int(3) arg) native;
    static void Uf_5print(T& Uv_4self, Ui_Ut_10133Int Uv_3arg); //native


    //! System.ulam:8: Void print(Bool(3) arg) native;
    static void Uf_5print(T& Uv_4self, Ui_Ut_10134Bool Uv_3arg); //native


    //! System.ulam:7: Void print(Unary(3) arg) native;
    static void Uf_5print(T& Uv_4self, Ui_Ut_10135Unary Uv_3arg); //native


    //! System.ulam:5: Void print(Int(4) arg) native;
    static void Uf_5print(T& Uv_4self, Ui_Ut_10143Int Uv_3arg); //native


    //! System.ulam:4: Void print(Int arg) native;
    static void Uf_5print(T& Uv_4self, Ui_Ut_102323Int Uv_3arg); //native


    //! System.ulam:3: Void print(Unsigned arg) native;
    static void Uf_5print(T& Uv_4self, Ui_Ut_102328Unsigned Uv_3arg); //native


    //! System.ulam:9: Void assert(Bool b) native;
    static void Uf_6assert(T& Uv_4self, Ui_Ut_10114Bool Uv_1b); //native

    //helper method not called directly
    s32 PositionOfDataMemberType(const char * namearg) const;

  };
} //MFM

#include "Uq_10106System.tcc"

#include "Uq_10106System_native.tcc"

#endif //UQ_10106SYSTEM_H
