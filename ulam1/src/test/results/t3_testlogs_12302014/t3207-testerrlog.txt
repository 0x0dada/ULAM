==15949== Memcheck, a memory error detector
==15949== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==15949== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==15949== Command: ./bin/test
==15949== 
Foo.ulam:17:14: (NodeBinaryOpArith.cpp:calcNodeType:94) Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator- .
Bar.ulam:11:16: (NodeBinaryOpArith.cpp:calcNodeType:103) Warning: Attempting to mix signed and unsigned types, LHS: <Int.32.-1>, RHS: <Unsigned.3.-1> for binary operator/ .
Gah.ulam:9:11: (NodeBinaryOpArith.cpp:calcNodeType:94) Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator+ .
Foo.ulam:5:13: (NodeProgram.cpp:checkAndLabelType:143) fyi: 3 warnings during type labeling.
TestCase: <t3207_test_compiler_elementandquark_inside_a_quark> FAILED!!
INVALID results:
Foo.ulam:17:14: Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator- .
Bar.ulam:11:16: Warning: Attempting to mix signed and unsigned types, LHS: <Int.32.-1>, RHS: <Unsigned.3.-1> for binary operator/ .
Gah.ulam:9:11: Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator+ .
Foo.ulam:5:13: fyi: 3 warnings during type labeling.
Ue_Foo { Bool(1) b(false);  System m_s();  Gah m_gah( Bool(1) b(false);  System m_s();  Int(3) a(3);  Int(3) d(3); );  Int(3) i(0);  Int(3) j(7);  Bar m_bar( Bool(1) b(true);  System m_s();  Unsigned(3) x(3);  Unsigned(3) y(0);  Gah m_gah( Bool(1) b(false);  System m_s();  Int(3) a(0);  Int(3) d(0); ); );  Int(32) test() {  i 0 cast = j ( i cast 1 cast -b )update = m_s ( j cast )print . m_s ( j cast )print . m_bar ( 3 cast 1 cast - )set . m_gah ( 4 cast 4 cast )set . j cast return } }
Exit status: -1
--------------------------------------------------------------------------------
Gah.ulam:9:11: (NodeBinaryOpArith.cpp:calcNodeType:94) Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator+ .
Gah.ulam:3:10: (NodeProgram.cpp:checkAndLabelType:143) fyi: 1 warnings during type labeling.
TestCase: <t3207_test_compiler_quark2_inside_a_quark> FAILED!!
INVALID results:
Gah.ulam:9:11: Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator+ .
Gah.ulam:3:10: fyi: 1 warnings during type labeling.
Uq_Gah { Bool(1) b(false);  System m_s();  Int(3) a(0);  Int(3) d(0);  <NOMAIN> }
Exit status: -1
--------------------------------------------------------------------------------
Bar.ulam:11:16: (NodeBinaryOpArith.cpp:calcNodeType:103) Warning: Attempting to mix signed and unsigned types, LHS: <Int.32.-1>, RHS: <Unsigned.3.-1> for binary operator/ .
Gah.ulam:9:11: (NodeBinaryOpArith.cpp:calcNodeType:94) Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator+ .
Bar.ulam:4:10: (NodeProgram.cpp:checkAndLabelType:143) fyi: 2 warnings during type labeling.
TestCase: <t3207_test_compiler_quark_inside_a_quark> FAILED!!
INVALID results:
Bar.ulam:11:16: Warning: Attempting to mix signed and unsigned types, LHS: <Int.32.-1>, RHS: <Unsigned.3.-1> for binary operator/ .
Gah.ulam:9:11: Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator+ .
Bar.ulam:4:10: fyi: 2 warnings during type labeling.
Uq_Bar { Bool(1) b(false);  System m_s();  Unsigned(3) x(0);  Unsigned(3) y(0);  Gah m_gah( Bool(1) b(false);  System m_s();  Int(3) a(0);  Int(3) d(0); );  <NOMAIN> }
Exit status: -1
--------------------------------------------------------------------------------
TestCase Summary: 1 passed, 3 failed.
==15949== 
==15949== HEAP SUMMARY:
==15949==     in use at exit: 0 bytes in 0 blocks
==15949==   total heap usage: 12,533 allocs, 12,533 frees, 1,378,783 bytes allocated
==15949== 
==15949== All heap blocks were freed -- no leaks are possible
==15949== 
==15949== For counts of detected and suppressed errors, rerun with: -v
==15949== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
==15974== Memcheck, a memory error detector
==15974== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==15974== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==15974== Command: ./main
==15974== 
==15974== 
==15974== HEAP SUMMARY:
==15974==     in use at exit: 0 bytes in 0 blocks
==15974==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==15974== 
==15974== All heap blocks were freed -- no leaks are possible
==15974== 
==15974== For counts of detected and suppressed errors, rerun with: -v
==15974== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
make[1]: *** [all] Error 255
make: *** [gen] Error 2
