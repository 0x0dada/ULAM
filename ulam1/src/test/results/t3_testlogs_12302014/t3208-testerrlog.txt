==16640== Memcheck, a memory error detector
==16640== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==16640== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==16640== Command: ./bin/test
==16640== 
Bar.ulam:11:16: (NodeBinaryOpArith.cpp:calcNodeType:103) Warning: Attempting to mix signed and unsigned types, LHS: <Int.32.-1>, RHS: <Unsigned.3.-1> for binary operator/ .
Gah.ulam:9:11: (NodeBinaryOpArith.cpp:calcNodeType:94) Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator+ .
Foo.ulam:5:13: (NodeProgram.cpp:checkAndLabelType:143) fyi: 2 warnings during type labeling.
TestCase: <t3208_test_compiler_elementandquark_accessaquarkinsideaquark> FAILED!!
INVALID results:
Bar.ulam:11:16: Warning: Attempting to mix signed and unsigned types, LHS: <Int.32.-1>, RHS: <Unsigned.3.-1> for binary operator/ .
Gah.ulam:9:11: Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator+ .
Foo.ulam:5:13: fyi: 2 warnings during type labeling.
Ue_Foo { Bool(1) b(false);  System m_s();  Int(3) i(0);  Int(3) j(4);  Bar m_bar( Bool(1) b(false);  System m_s();  Unsigned(3) x(0);  Unsigned(3) y(0);  Gah m_gah( Bool(1) b(false);  System m_s();  Int(3) a(2);  Int(3) d(6); ); );  Int(32) test() {  m_bar m_gah ( 2 cast 2 cast - )set . . j m_bar m_gah . ( )toInt . cast = m_s ( j )print . 0 cast return } }
Exit status: 0
--------------------------------------------------------------------------------
Gah.ulam:9:11: (NodeBinaryOpArith.cpp:calcNodeType:94) Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator+ .
Gah.ulam:3:10: (NodeProgram.cpp:checkAndLabelType:143) fyi: 1 warnings during type labeling.
TestCase: <t3208_test_compiler_quark2_accessaquarkinsideaquark> FAILED!!
INVALID results:
Gah.ulam:9:11: Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator+ .
Gah.ulam:3:10: fyi: 1 warnings during type labeling.
Uq_Gah { Bool(1) b(false);  System m_s();  Int(3) a(0);  Int(3) d(0);  <NOMAIN> }
Exit status: -1
--------------------------------------------------------------------------------
Bar.ulam:11:16: (NodeBinaryOpArith.cpp:calcNodeType:103) Warning: Attempting to mix signed and unsigned types, LHS: <Int.32.-1>, RHS: <Unsigned.3.-1> for binary operator/ .
Gah.ulam:9:11: (NodeBinaryOpArith.cpp:calcNodeType:94) Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator+ .
Bar.ulam:4:10: (NodeProgram.cpp:checkAndLabelType:143) fyi: 2 warnings during type labeling.
TestCase: <t3208_test_compiler_quark_accessaquarkinsideaquark> FAILED!!
INVALID results:
Bar.ulam:11:16: Warning: Attempting to mix signed and unsigned types, LHS: <Int.32.-1>, RHS: <Unsigned.3.-1> for binary operator/ .
Gah.ulam:9:11: Warning: Attempting to fit a constant into a smaller bit size, LHS: <Int.3.-1>, RHS: <Int.-1.-1> for binary operator+ .
Bar.ulam:4:10: fyi: 2 warnings during type labeling.
Uq_Bar { Bool(1) b(false);  System m_s();  Unsigned(3) x(0);  Unsigned(3) y(0);  Gah m_gah( Bool(1) b(false);  System m_s();  Int(3) a(0);  Int(3) d(0); );  <NOMAIN> }
Exit status: -1
--------------------------------------------------------------------------------
TestCase Summary: 1 passed, 3 failed.
==16640== 
==16640== HEAP SUMMARY:
==16640==     in use at exit: 0 bytes in 0 blocks
==16640==   total heap usage: 11,987 allocs, 11,987 frees, 1,291,349 bytes allocated
==16640== 
==16640== All heap blocks were freed -- no leaks are possible
==16640== 
==16640== For counts of detected and suppressed errors, rerun with: -v
==16640== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
==16665== Memcheck, a memory error detector
==16665== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==16665== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==16665== Command: ./main
==16665== 
==16665== 
==16665== HEAP SUMMARY:
==16665==     in use at exit: 0 bytes in 0 blocks
==16665==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==16665== 
==16665== All heap blocks were freed -- no leaks are possible
==16665== 
==16665== For counts of detected and suppressed errors, rerun with: -v
==16665== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
