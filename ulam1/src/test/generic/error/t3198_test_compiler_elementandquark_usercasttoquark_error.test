## -*- mode:ulam -*-
#=t3198_test_compiler_elementandquark_usercasttoquark_error
#!
./Foo.ulam:8:11: ERROR: Cannot cast Bool(3) to Bar.
./Foo.ulam:8:8: ERROR: Unresolved No.1.
./Foo.ulam:6:2: Warning: 1 nodes with unresolved types remain in function <test> (Uf_4test,1).
./Foo.ulam:6:6: Warning: Summary: 1 nodes with unresolved types remain in  a single function <test> in class: Foo.
./Foo.ulam:3:10: Warning: 1 data member nodes with unresolved types remain in class 'Foo'.
./Foo.ulam:3:10: ERROR: 1 Nodes with unresolved types detected after type labeling class: Foo.
Unrecoverable Program Type Label FAILURE.
##
#>Foo.ulam
ulam 1;
 use Bar;
 element Foo {
 Bool(3) m_b;
 Bar m_bar;
 Int test() {
 m_b = true;
 m_bar = (Bar) m_b;
 return (Int) m_b;
 }
 }

#:Bar.ulam
ulam 1;
 quark Bar {
 Bool val_b[3];
  Void reset(Bool b) {
 b = false;
 }
 Int toInt(){
 return 7;
}
 }
##
##      // and if we do..
##      //./Foo.ulam:9:14: ERROR: RHS of operator <as> is an array: TYPE_IDENT, operation deleted.
##      //bool rtn1 = fms->add("Foo.ulam","ulam 1;\n use Bar;\n element Foo {\n typedef Bool(1) Barr[3];\n Barr m_b;\n Bar m_bar;\n Int test() {\n m_b[0] = true;\n if(m_bar as Barr) {\n m_bar = m_b;\n }\n return m_c;\n }\n }\n");
##
##      //different test..needs new number.
##      //./Foo.ulam:4:4: ERROR: Cannot CAST type: Bar(3)<11> as a Atom(96).
##      //bool rtn1 = fms->add("Foo.ulam","ulam 1; use Bar; element Foo {\n Bar m_bar;\n Int test() { Atom a;\n a = m_bar;\n return 0;\n } }\n");
##      //eval returns wrong answer! but compiles
##      //bool rtn1 = fms->add("Foo.ulam","ulam 1; use Bar; element Foo {\n Bar m_bar;\n Int test() { Atom a;\n a = self;\n if(a has Bar) {\n return 1;\n}\n return 0;\n } }\n");
##
#.
